FD<-data.frame(year,country,industry, A.household,B.household)
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
View(variables_industry)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(wages, profits,Y=wages+profits)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
View(variables_country)
variables_country<-variables_country %>% mutate(sigma=profits/wages, h=c/wages, gamma=Y/(c+wages),
r=profits/(c+wages))
View(VA)
View(variables_industry)
View(variables_country)
variables_year<-variables_country %>% group_by(year) %>% summarise_if(is.numeric,sum)
View(variables_year)
variables_year<-variables_year %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_year)
View(eci)
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
taxes<-runif(n = 8, min = 0, max = 6)
subsidies<-runif(n = 8, min = 0, max = 6)
profits<-c(2,2,1,3,3,3,2,4)
nmi<-runif(n = 8, min = 0, max = 6)
depreciation<-runif(n = 8, min = 0, max = 6)
VA<-data.frame(year, country, industry, wages, profits,taxes, subsidies, profits, nmi, depreciation)
View(VA)
rm(VA)
VA<-data.frame(year, country, industry, wages, profits,taxes, subsidies, nmi, depreciation)
View(VA)
rm(eci, psrtr, pstre)
rm(pstr)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
A.non-profit<-runif(n = 8, min = 0, max = 6)
B.non-profit<-runif(n = 8, min = 0, max = 6)
A.government<-runif(n = 8, min = 0, max = 6)
B.government<-runif(n = 8, min = 0, max = 6)
A.capitalformation<-runif(n = 8, min = 0, max = 6)
B.capitalformation<-runif(n = 8, min = 0, max = 6)
A.inventories<-runif(n = 8, min = 0, max = 6)
B.inventories<-runif(n = 8, min = 0, max = 6)
A.acquisitions<-runif(n = 8, min = 0, max = 6)
B.acquisitions<-runif(n = 8, min = 0, max = 6)
FD<-data.frame(year,country,industry, A.household,B.household, A.government, B.government,
A.capitalformation, B.capitalformation, A.inventories,B.inventories,A.acquisitions,
B.acquisitions)
View(FD)
View(VA)
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
View(variables_industry)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c-d")
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c-d")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c-d)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, "c-d")
View(variables_industry)
variables_industry<-variables_industry %>% mutate(wages, profits,Y=wages+profits.c="c-d"+depreciation)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits.c="c-d"+depreciation)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits.c=c-d+depreciation)
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to=constant)
View(variables_industry)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="constant")
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, constant)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits.c=constant+depreciation)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits, c=constant+depreciation)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
variables_country<-variables_country %>% mutate(sigma=profits/wages, h=c/wages, gamma=Y/(c+wages),
r=profits/(c+wages))
variables_year<-variables_country %>% group_by(year) %>% summarise_if(is.numeric,sum)
variables_year<-variables_year %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
View(VA)
View(variables_year)
View(variables_country)
install.packages("Rcmdr")
library(Rcmdr)
library(dplyr)
library(tidyr)
library(data.table)
library(readxl)
isntall.packages("readxl")
install.packages("readxl")
library(readxl)
library(readxl)
library(xlsx)
detach("package:readxl", unload = TRUE)
install.packages("xlsx")
library(xlsx)
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
library("rio")
library(matlib)
library(gdata)
library(plyr)
library(ggplot2)
library(car)
library(foreign)
library(rmarkdown)
options(scipen=10000)
options(digits=4)
rm(list=ls())
BAA  <- get_fred_series("BAA", series_name="BAA")
FEDFUNDS  <- get_fred_series("FEDFUNDS", series_name="FEDFUNDS")
## Join data and arrange by date
rates <- arrange(full_join(x=FEDFUNDS, y=BAA), date)
## Omit na rows
rates <- na.omit(rates)
## Filter for observations after March 1963
rates <- filter(rates, date>="1963-03-01")
## Melt
rates.melt <- melt(rates,
id="date",
measure.vars = c("FEDFUNDS", "BAA"),
variable.name = "Measurement",
value.name = "Rate")
save(rates.melt, file="rates.melt.Rdata")
#################################
##                             ##
## Augmented Dicky-Fuller Test ##
##                             ##
#################################
## Run Augmented Dicky-Fuller Test on both BAA and FEDFUNDS
adfTest.BAA <- as.data.frame(adf.test(rates$BAA, output=FALSE))
adfTest.FEDFUNDS <- as.data.frame(adf.test(rates$FEDFUNDS, output=FALSE))
## Construct a table with results
adfTest.df <- cbind(adfTest.BAA[,1:3],
adfTest.BAA[,5:6],
adfTest.BAA[,8:9],
adfTest.FEDFUNDS[,2:3],
adfTest.FEDFUNDS[,5:6],
adfTest.FEDFUNDS[,8:9])
colnames(adfTest.df) <- c("Lag", "ADF", "p Value", "ADF", "p Value", "ADF", "p Value",
"ADF", "p Value", "ADF", "p Value", "ADF", "p Value")
save(adfTest.df, file="adfTest.df.Rdata")
## Difference Variables
drates <- data.frame(date=rates[2:692,1],
dBAA=diff(rates$BAA),
dFEDFUNDS=diff(rates$FEDFUNDS))
drates.melt <- melt(drates,
id="date",
measure.vars = c("dFEDFUNDS", "dBAA"),
variable.name = "Measurement",
value.name = "Rate")
save(drates.melt, file="drates.melt.Rdata")
## Re-run ADF tests and construct table with results
adfTest.dBAA <- as.data.frame(adf.test(drates$dBAA, output=FALSE))
adfTest.dFEDFUNDS <- as.data.frame(adf.test(drates$dFEDFUNDS, output=FALSE))
adfTest.diff.df <- cbind(adfTest.dBAA[,1:3],
adfTest.dBAA[,5:6],
adfTest.dBAA[,8:9],
adfTest.dFEDFUNDS[,2:3],
adfTest.dFEDFUNDS[,5:6],
adfTest.dFEDFUNDS[,8:9])
colnames(adfTest.diff.df) <- c("Lag", "ADF", "p Value", "ADF", "p Value", "ADF", "p Value",
"ADF", "p Value", "ADF", "p Value", "ADF", "p Value")
save(adfTest.diff.df, file="adfTest.diff.df.Rdata")
############################
##                        ##
## Granger Causality Test ##
##                        ##
############################
## Should NOT Granger test these because they are not both stationary
grangertest(FEDFUNDS ~ BAA, order=4, na.action=na.omit, data=rates)
grangertest(BAA ~ FEDFUNDS, order=4, na.action=na.omit, data=rates)
## Granger causality test on first-differenced, stationary series
grangertest(dFEDFUNDS ~ dBAA, order=4, na.action=na.omit, data=drates)
grangertest(dBAA ~ dFEDFUNDS, order=4, na.action=na.omit, data=drates)
grangertest(dFEDFUNDS ~ dBAA, order=8, na.action=na.omit, data=drates)
grangertest(dBAA ~ dFEDFUNDS, order=8, na.action=na.omit, data=drates)
grangertest(dFEDFUNDS ~ dBAA, order=12, na.action=na.omit, data=drates)
grangertest(dBAA ~ dFEDFUNDS, order=12, na.action=na.omit, data=drates)
drates.cycle1 <- filter(drates, date>="1973-11-01" & date<="1981-06-01")
drates.cycle2 <- filter(drates, date>="2001-03-01" & date<="2008-02-01")
drates.recent <- filter(drates, date>"2008-02-01")
lagVector <- c(1,4,8,12)
## Make table for Granger Causality Test for all Dates
grangerTable.all <- data.frame()
for (lag in lagVector) {
test <- grangertest(dFEDFUNDS ~ dBAA, order=lag, na.action=na.omit, data=drates)
grangerTable.all <- rbind(grangerTable.all, c(lag, test[2,3], test[2,4]))
}
for (lag in lagVector) {
test <- grangertest(dBAA ~ dFEDFUNDS, order=lag, na.action=na.omit, data=drates)
grangerTable.all <- rbind(grangerTable.all, c(lag, test[2,3], test[2,4]))
}
library(lmtest)  ## For Granger causality
rm(list = ls())
dev.off()
## Get data from FRED
BAA  <- get_fred_series("BAA", series_name="BAA")
FEDFUNDS  <- get_fred_series("FEDFUNDS", series_name="FEDFUNDS")
## Join data and arrange by date
rates <- arrange(full_join(x=FEDFUNDS, y=BAA), date)
## Omit na rows
rates <- na.omit(rates)
## Filter for observations after March 1963
rates <- filter(rates, date>="1963-03-01")
## Melt
rates.melt <- melt(rates,
id="date",
measure.vars = c("FEDFUNDS", "BAA"),
variable.name = "Measurement",
value.name = "Rate")
save(rates.melt, file="rates.melt.Rdata")
#################################
##                             ##
## Augmented Dicky-Fuller Test ##
##                             ##
#################################
## Run Augmented Dicky-Fuller Test on both BAA and FEDFUNDS
adfTest.BAA <- as.data.frame(adf.test(rates$BAA, output=FALSE))
adfTest.FEDFUNDS <- as.data.frame(adf.test(rates$FEDFUNDS, output=FALSE))
## Construct a table with results
adfTest.df <- cbind(adfTest.BAA[,1:3],
adfTest.BAA[,5:6],
adfTest.BAA[,8:9],
adfTest.FEDFUNDS[,2:3],
adfTest.FEDFUNDS[,5:6],
adfTest.FEDFUNDS[,8:9])
colnames(adfTest.df) <- c("Lag", "ADF", "p Value", "ADF", "p Value", "ADF", "p Value",
"ADF", "p Value", "ADF", "p Value", "ADF", "p Value")
save(adfTest.df, file="adfTest.df.Rdata")
## Difference Variables
drates <- data.frame(date=rates[2:692,1],
dBAA=diff(rates$BAA),
dFEDFUNDS=diff(rates$FEDFUNDS))
drates.melt <- melt(drates,
id="date",
measure.vars = c("dFEDFUNDS", "dBAA"),
variable.name = "Measurement",
value.name = "Rate")
save(drates.melt, file="drates.melt.Rdata")
## Re-run ADF tests and construct table with results
adfTest.dBAA <- as.data.frame(adf.test(drates$dBAA, output=FALSE))
adfTest.dFEDFUNDS <- as.data.frame(adf.test(drates$dFEDFUNDS, output=FALSE))
adfTest.diff.df <- cbind(adfTest.dBAA[,1:3],
adfTest.dBAA[,5:6],
adfTest.dBAA[,8:9],
adfTest.dFEDFUNDS[,2:3],
adfTest.dFEDFUNDS[,5:6],
adfTest.dFEDFUNDS[,8:9])
colnames(adfTest.diff.df) <- c("Lag", "ADF", "p Value", "ADF", "p Value", "ADF", "p Value",
"ADF", "p Value", "ADF", "p Value", "ADF", "p Value")
save(adfTest.diff.df, file="adfTest.diff.df.Rdata")
############################
##                        ##
## Granger Causality Test ##
##                        ##
############################
## Should NOT Granger test these because they are not both stationary
grangertest(FEDFUNDS ~ BAA, order=4, na.action=na.omit, data=rates)
grangertest(BAA ~ FEDFUNDS, order=4, na.action=na.omit, data=rates)
## Granger causality test on first-differenced, stationary series
grangertest(dFEDFUNDS ~ dBAA, order=4, na.action=na.omit, data=drates)
grangertest(dBAA ~ dFEDFUNDS, order=4, na.action=na.omit, data=drates)
grangertest(dFEDFUNDS ~ dBAA, order=8, na.action=na.omit, data=drates)
grangertest(dBAA ~ dFEDFUNDS, order=8, na.action=na.omit, data=drates)
grangertest(dFEDFUNDS ~ dBAA, order=12, na.action=na.omit, data=drates)
grangertest(dBAA ~ dFEDFUNDS, order=12, na.action=na.omit, data=drates)
drates.cycle1 <- filter(drates, date>="1973-11-01" & date<="1981-06-01")
drates.cycle2 <- filter(drates, date>="2001-03-01" & date<="2008-02-01")
drates.recent <- filter(drates, date>"2008-02-01")
lagVector <- c(1,4,8,12)
## Make table for Granger Causality Test for all Dates
grangerTable.all <- data.frame()
for (lag in lagVector) {
test <- grangertest(dFEDFUNDS ~ dBAA, order=lag, na.action=na.omit, data=drates)
grangerTable.all <- rbind(grangerTable.all, c(lag, test[2,3], test[2,4]))
}
for (lag in lagVector) {
test <- grangertest(dBAA ~ dFEDFUNDS, order=lag, na.action=na.omit, data=drates)
grangerTable.all <- rbind(grangerTable.all, c(lag, test[2,3], test[2,4]))
}
View(grangerTable.all)
BAA  <- get_fred_series("BAA", series_name="BAA")
library(alfred)
library(tidyverse)
library(aTSA)
library(reshape2)
library(lmtest)
rm(list = ls())
dev.off()
## Get data from FRED
BAA  <- get_fred_series("BAA", series_name="BAA")
FEDFUNDS  <- get_fred_series("FEDFUNDS", series_name="FEDFUNDS")
rates <- arrange(full_join(x=FEDFUNDS, y=BAA), date)
## Omit na rows
rates <- na.omit(rates)
## Filter for observations after March 1963
rates <- filter(rates, date>="1963-03-01")
## Melt
rates.melt <- melt(rates,
id="date",
measure.vars = c("FEDFUNDS", "BAA"),
variable.name = "Measurement",
value.name = "Rate")
save(rates.melt, file="rates.melt.Rdata")
#################################
##                             ##
## Augmented Dicky-Fuller Test ##
##                             ##
#################################
## Run Augmented Dicky-Fuller Test on both BAA and FEDFUNDS
adfTest.BAA <- as.data.frame(adf.test(rates$BAA, output=FALSE))
adfTest.FEDFUNDS <- as.data.frame(adf.test(rates$FEDFUNDS, output=FALSE))
## Construct a table with results
adfTest.df <- cbind(adfTest.BAA[,1:3],
adfTest.BAA[,5:6],
adfTest.BAA[,8:9],
adfTest.FEDFUNDS[,2:3],
adfTest.FEDFUNDS[,5:6],
adfTest.FEDFUNDS[,8:9])
colnames(adfTest.df) <- c("Lag", "ADF", "p Value", "ADF", "p Value", "ADF", "p Value",
"ADF", "p Value", "ADF", "p Value", "ADF", "p Value")
save(adfTest.df, file="adfTest.df.Rdata")
## Difference Variables
drates <- data.frame(date=rates[2:692,1],
dBAA=diff(rates$BAA),
dFEDFUNDS=diff(rates$FEDFUNDS))
drates.melt <- melt(drates,
id="date",
measure.vars = c("dFEDFUNDS", "dBAA"),
variable.name = "Measurement",
value.name = "Rate")
save(drates.melt, file="drates.melt.Rdata")
## Re-run ADF tests and construct table with results
adfTest.dBAA <- as.data.frame(adf.test(drates$dBAA, output=FALSE))
adfTest.dFEDFUNDS <- as.data.frame(adf.test(drates$dFEDFUNDS, output=FALSE))
adfTest.diff.df <- cbind(adfTest.dBAA[,1:3],
adfTest.dBAA[,5:6],
adfTest.dBAA[,8:9],
adfTest.dFEDFUNDS[,2:3],
adfTest.dFEDFUNDS[,5:6],
adfTest.dFEDFUNDS[,8:9])
colnames(adfTest.diff.df) <- c("Lag", "ADF", "p Value", "ADF", "p Value", "ADF", "p Value",
"ADF", "p Value", "ADF", "p Value", "ADF", "p Value")
save(adfTest.diff.df, file="adfTest.diff.df.Rdata")
############################
##                        ##
## Granger Causality Test ##
##                        ##
############################
## Should NOT Granger test these because they are not both stationary
grangertest(FEDFUNDS ~ BAA, order=4, na.action=na.omit, data=rates)
grangertest(BAA ~ FEDFUNDS, order=4, na.action=na.omit, data=rates)
## Granger causality test on first-differenced, stationary series
grangertest(dFEDFUNDS ~ dBAA, order=4, na.action=na.omit, data=drates)
grangertest(dBAA ~ dFEDFUNDS, order=4, na.action=na.omit, data=drates)
grangertest(dFEDFUNDS ~ dBAA, order=8, na.action=na.omit, data=drates)
grangertest(dBAA ~ dFEDFUNDS, order=8, na.action=na.omit, data=drates)
grangertest(dFEDFUNDS ~ dBAA, order=12, na.action=na.omit, data=drates)
grangertest(dBAA ~ dFEDFUNDS, order=12, na.action=na.omit, data=drates)
drates.cycle1 <- filter(drates, date>="1973-11-01" & date<="1981-06-01")
drates.cycle2 <- filter(drates, date>="2001-03-01" & date<="2008-02-01")
drates.recent <- filter(drates, date>"2008-02-01")
lagVector <- c(1,4,8,12)
## Make table for Granger Causality Test for all Dates
grangerTable.all <- data.frame()
for (lag in lagVector) {
test <- grangertest(dFEDFUNDS ~ dBAA, order=lag, na.action=na.omit, data=drates)
grangerTable.all <- rbind(grangerTable.all, c(lag, test[2,3], test[2,4]))
}
for (lag in lagVector) {
test <- grangertest(dBAA ~ dFEDFUNDS, order=lag, na.action=na.omit, data=drates)
grangerTable.all <- rbind(grangerTable.all, c(lag, test[2,3], test[2,4]))
}
View(grangerTable.all)
lagVector <- c(1,4,8,12)
## Make table for Granger Causality Test for all Dates
grangerTable.all <- data.frame()
for (lag in lagVector) {
test <- grangertest(dFEDFUNDS ~ dBAA, order=lag, na.action=na.omit, data=drates)
grangerTable.all <- rbind(grangerTable.all, c(lag, test[2,3], test[2,4]))
}
View(grangerTable.all)
for (lag in lagVector) {
test <- grangertest(dBAA ~ dFEDFUNDS, order=lag, na.action=na.omit, data=drates)
grangerTable.all <- rbind(grangerTable.all, c(lag, test[2,3], test[2,4]))
}
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
library("rio")
library(matlib)
library(gdata)
library(tinytex)
library(car)
library(scales)
library(ggplot2)
library(foreign)
library(rmarkdown)
library(fastDummies)
library(haven)
library(pmdplyr)
library(plotrix)
library(foreign)
library(stringr)
library(alfred)
library(aTSA)
library(lmtest)  ## For Granger causality
options(scipen=10000)
options(digits=4)
rm(list=ls())
setwd("C:/Users/User/Documents/GitHub/Problem-Sets--753/PS5")
### Part 2
BAA  <- get_fred_series("BAA", series_name="BAA")
FEDFUNDS  <- get_fred_series("FEDFUNDS", series_name="FEDFUNDS")
ggplot(BAA, aes(x=date,y=BAA))+geom_line()
ggplot(FEDFUNDS, aes(x=date,y=FEDFUNDS))+geom_line()
#1
series<-merge(BAA, FEDFUNDS, by="date")
series<-series %>% filter(date>="1963-03-01" & date<="2009-06-01")
ggplot(series, aes(x=date))+theme_classic() +
geom_line(aes(y=BAA,color="black"),size=1)+
geom_line(aes(y=FEDFUNDS,color="blue"),size=1)+
xlab("Date")+
ylab("Rate")+
scale_color_discrete(name="Interest Rate", label=c("BAA","FEDFUNDS"))
ggsave("BAA.FEDFUNDS.time.series.png")
BAA1<-adf.test(series$BAA)
FEDFUNDS1<-adf.test(series$FEDFUNDS)
## Create a Data Frame with results:
ADF1<-data.frame(BAA1$type1,BAA1$type2[,2:3],BAA1$type3[,2:3],FEDFUNDS1$type1[,2:3], FEDFUNDS1$type2[,2:3], FEDFUNDS1$type3[,2:3])
colnames(ADF1)<-c("Lag",rep(c("ADF", "P-Value"),6))
save(ADF1, file="ADF1.Rdata")
#The series are non-stationary :(
#2 First difference data
series<-series %>% mutate(d.BAA=c(NA,diff(BAA)),d.FEDFUNDS=c(NA,diff(FEDFUNDS))) #Chulada
#Plot of differents
ggplot(series, aes(x=date))+theme_classic() +
geom_line(aes(y=d.BAA,color="black"),size=1)+
geom_line(aes(y=d.FEDFUNDS,color="blue"),size=1)+
xlab("Date")+
ylab("Rate")+
scale_color_discrete(name="Interest Rate", label=c("BAA","FEDFUNDS"))
ggsave("BAA.FEDFUNDS.d.time.series.png")
ggplot(series, aes(x=date), na.rm=TRUE)+theme_classic() +
geom_line(aes(y=d.BAA,color="black"),size=1)+
geom_line(aes(y=d.FEDFUNDS,color="blue"),size=1)+
xlab("Date")+
ylab("Rate")+
scale_color_discrete(name="Interest Rate", label=c("BAA","FEDFUNDS"))
ggsave("BAA.FEDFUNDS.d.time.series.png")
ggplot(series, aes(x=date), na.rm=TRUE)+theme_classic() +
geom_line(aes(y=d.BAA,color="black"),size=1)+
geom_line(aes(y=d.FEDFUNDS,color="blue"),size=1)+
xlab("Date")+
ylab("Rate")+
scale_color_discrete(name="Interest Rate", label=c("BAA","FEDFUNDS"))
ggsave("BAA.FEDFUNDS.d.time.series.png")
ggplot(series, aes(x=date), na.rm=TRUE)+theme_classic() +
geom_line(aes(y=d.FEDFUNDS,color="blue"),size=1)+
xlab("Date")+
ylab("Rate")+
scale_color_discrete(name="Interest Rate", label=c("BAA","FEDFUNDS"))
ggplot(series, aes(x=date), na.rm=TRUE)+theme_classic() +
geom_line(aes(y=d.BAA,color="black"),size=1)+
geom_line(aes(y=d.FEDFUNDS,color="blue"),size=1)+
xlab("Date")+
ylab("Rate")+
scale_color_discrete(name="Interest Rate", label=c("BAA","FEDFUNDS"))
ggsave("BAA.FEDFUNDS.d.time.series.png")
knitr::opts_chunk$set(echo = FALSE)
knitr::include_graphics("BAA.FEDFUNDS.time.series.png")
ggplot(series, aes(x=date))+theme_classic() +
geom_line(aes(y=BAA,color="black"),size=1)+
geom_line(aes(y=FEDFUNDS,color="blue"),size=1)+
xlab("Date")+
ylab("Rate")+
scale_color_discrete(name="Interest Rate", label=c("BAA","FEDFUNDS"))
ggsave("BAA.FEDFUNDS.time.series.png")
knitr::include_graphics("BAA.FEDFUNDS.d.time.series.png")
