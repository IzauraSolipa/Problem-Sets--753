VAvar<-rep(rep(variablei,each=189*26),26)
VA3<-data.frame(VA2,VAvar,year)
VA4<-VA3[,-c(3)]
VA5<-VA4[c("year","country","industry","VAvar","v")]
VA6<-spread(VA5, VAvar,v)
View(FD2)
View(VA6)
list_of_files <- list.files(path = ".", recursive = TRUE,        ###This is the command for reading all the _bp_VA.txt files
pattern = "_bp_T.txt",                   ### However it is not in the scan form but in read.delim
full.names = TRUE)
rm(list=ls())
### Transactions
library(dplyr)
library(tidyr)
library(data.table)
years<-1990:2015
industryi <- c("Agriculture", "Fishing", "Mining and Quarrying",
"Food & Beverages", "Textiles and Wearing Apparel",
"Wood and Paper", "Petroleum, Chemical and Non-Metallic Mineral Products",
"Metal Products", "Electrical and Machinery", "Transport Equipment",
"Other Manufacturing", "Recycling", "Electricity, Gas and Water",
"Construction", "Maintenance and Repair", "Wholesale Trade",
"Retail Trade", "Hotels and Restraurants", "Transport",
"Post and Telecommunications",
"Financial Intermediation and Business Activities",
"Public Administration", "Education, Health and Other Services",
"Private Households", "Others", "Re-export & Re-import")
countryi <- c("AFG", "ALB", "DZA", "AND", "AGO", "ATG", "ARG", "ARM", "ABW", "AUS",
"AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN",
"BMU", "BTN", "BOL", "BIH", "BWA", "BRA", "VGB", "BRN", "BGR", "BFA",
"BDI", "KHM", "CMR", "CAN", "CPV", "CYM", "CAF", "TCD", "CHL", "CHN",
"COL", "COG", "CRI", "HRV", "CUB", "CYP", "CZE", "CIV", "PRK", "COD",
"DNK", "DJI", "DOM", "ECU", "EGY", "SLV", "ERI", "EST", "ETH", "FJI",
"FIN", "FRA", "PYF", "GAB", "GMB", "GEO", "DEU", "GHA", "GRC", "GRL",
"GTM", "GIN", "GUY", "HTI", "HND", "HKG", "HUN", "ISL", "IND", "IDN",
"IRN", "IRQ", "IRL", "ISR", "ITA", "JAM", "JPN", "JOR", "KAZ", "KEN",
"KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU",
"LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MRT", "MUS",
"MEX", "MCO", "MNG", "MNE", "MAR", "MOZ", "MMR", "NAM", "NPL", "NLD",
"ANT", "NCL", "NZL", "NIC", "NER", "NGA", "NOR", "PSE", "OMN", "PAK",
"PAN", "PNG", "PRY", "PER", "PHL", "POL", "PRT", "QAT", "KOR", "MDA",
"ROU", "RUS", "RWA", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC",
"SLE", "SGP", "SVK", "SVN", "SOM", "ZAF", "SDS", "ESP", "LKA", "SUD",
"SUR", "SWZ", "SWE", "CHE", "SYR", "TWN", "TJK", "THA", "MKD", "TGO",
"TTO", "TUN", "TUR", "TKM", "USR", "UGA", "UKR", "ARE", "GBR", "TZA",
"USA", "URY", "UZB", "VUT", "VEN", "VNM", "YEM", "ZMB", "ZWE")
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "_bp_T.txt",
full.names = TRUE)
TD <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE)
TD <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE)
memory.size()
memory.limit()
memory.limit(size=56000)
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "_bp_T.txt",
full.names = TRUE)
TD <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE)
View(TD)
TD<-TD[-c(4915*1,4915*2,4915*3,4915*4,4915*5,4915*6,4915*7,4915*8,4915*9,4915*10,4915*11,4915*12,4915*13,
4915*14,4915*15,4915*16,4915*17,4915*18,4915*19,4915*20,4915*21,4915*22,4915*23,4915*24,4915*25,
4915*26),-4915]
rm(list=ls())
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
profits<-c(2,2,1,3,3,3,2,4)
VA<-data.frame(year, country, industry, wages, profits)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
FD<-data.frame(year,country,industry, A.household,B.household)
variables_industry<-T%>%group_by(year)%>%summarise_if(is.numeric,sum)
variables_industry<-variables_industry%>%pivot_longer(-year,"i", values_to="c")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
View(variables_industry)
Y<-VA %>% select(wages,profits)
Y<-rowSums(Y)
variables_industry<-variables_industry %>% mutate(wages, profits,Y,Y2=wages+profits)
View(variables_industry)
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
profits<-c(2,2,1,3,3,3,2,4)
VA<-data.frame(year, country, industry, wages, profits)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
FD<-data.frame(year,country,industry, A.household,B.household)
variables_industry<-T%>%group_by(year)%>%summarise_if(is.numeric,sum)
variables_industry<-variables_industry%>%pivot_longer(-year,"i", values_to="c")
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
variables_industry<-variables_industry %>% mutate(wages, profits,Y=wages+profits)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
variables_country<-variables_country %>% mutate(sigma=profits/wages, h=c/wages, gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_country)
variables_year<-variables_country %>% group_by(year) %>% summarise_if(is.numeric,sum)
names(variables_industry)
variables_year<-variables_year %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_country)
View(variables_year)
View(variables_country)
View(variables_industry)
View(`T`)
View(VA)
View(FD)
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
profits<-c(2,2,1,3,3,3,2,4)
VA<-data.frame(year, country, industry, wages, profits)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
FD<-data.frame(year,country,industry, A.household,B.household)
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
View(variables_industry)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(wages, profits,Y=wages+profits)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
View(variables_country)
variables_country<-variables_country %>% mutate(sigma=profits/wages, h=c/wages, gamma=Y/(c+wages),
r=profits/(c+wages))
View(VA)
View(variables_industry)
View(variables_country)
variables_year<-variables_country %>% group_by(year) %>% summarise_if(is.numeric,sum)
View(variables_year)
variables_year<-variables_year %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_year)
View(eci)
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
taxes<-runif(n = 8, min = 0, max = 6)
subsidies<-runif(n = 8, min = 0, max = 6)
profits<-c(2,2,1,3,3,3,2,4)
nmi<-runif(n = 8, min = 0, max = 6)
depreciation<-runif(n = 8, min = 0, max = 6)
VA<-data.frame(year, country, industry, wages, profits,taxes, subsidies, profits, nmi, depreciation)
View(VA)
rm(VA)
VA<-data.frame(year, country, industry, wages, profits,taxes, subsidies, nmi, depreciation)
View(VA)
rm(eci, psrtr, pstre)
rm(pstr)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
A.non-profit<-runif(n = 8, min = 0, max = 6)
B.non-profit<-runif(n = 8, min = 0, max = 6)
A.government<-runif(n = 8, min = 0, max = 6)
B.government<-runif(n = 8, min = 0, max = 6)
A.capitalformation<-runif(n = 8, min = 0, max = 6)
B.capitalformation<-runif(n = 8, min = 0, max = 6)
A.inventories<-runif(n = 8, min = 0, max = 6)
B.inventories<-runif(n = 8, min = 0, max = 6)
A.acquisitions<-runif(n = 8, min = 0, max = 6)
B.acquisitions<-runif(n = 8, min = 0, max = 6)
FD<-data.frame(year,country,industry, A.household,B.household, A.government, B.government,
A.capitalformation, B.capitalformation, A.inventories,B.inventories,A.acquisitions,
B.acquisitions)
View(FD)
View(VA)
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
View(variables_industry)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c-d")
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c-d")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c-d)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, "c-d")
View(variables_industry)
variables_industry<-variables_industry %>% mutate(wages, profits,Y=wages+profits.c="c-d"+depreciation)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits.c="c-d"+depreciation)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits.c=c-d+depreciation)
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to=constant)
View(variables_industry)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="constant")
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, constant)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits.c=constant+depreciation)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits, c=constant+depreciation)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
variables_country<-variables_country %>% mutate(sigma=profits/wages, h=c/wages, gamma=Y/(c+wages),
r=profits/(c+wages))
variables_year<-variables_country %>% group_by(year) %>% summarise_if(is.numeric,sum)
variables_year<-variables_year %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
View(VA)
View(variables_year)
View(variables_country)
install.packages("Rcmdr")
library(Rcmdr)
library(dplyr)
library(tidyr)
library(data.table)
library(readxl)
isntall.packages("readxl")
install.packages("readxl")
library(readxl)
library(readxl)
library(xlsx)
detach("package:readxl", unload = TRUE)
install.packages("xlsx")
library(xlsx)
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
library("rio")
library(matlib)
library(gdata)
library(plyr)
library(ggplot2)
library(car)
library(foreign)
library(rmarkdown)
options(scipen=10000)
options(digits=4)
rm(list=ls())
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
library("rio")
library(matlib)
library(gdata)
library(tinytex)
library(scales)
library(ggplot2)
library(foreign)
library(rmarkdown)
options(scipen=10000)
options(digits=4)
rm(list=ls())
################### PROBLEM 1 ##########################################
########################################################################
#Set my working directory
setwd("C:/Users/User/Documents/GitHub/Problem-Sets--753/PS2")
chow <- read_dta(http://courses.umass.edu/econ753/berndt/stata/chow.dta)
chow <- fread('http://courses.umass.edu/econ753/berndt/stata/chow.dta')
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
View(chow)
chow<-mutate(across(.cols=RENT, MULT, ACCESS, ADD), LN=log(.x))
chow<-chow %>% mutate(across(.cols=RENT, MULT, ACCESS, ADD), LN=log(.x))
chow<-chow %>% mutate(c_across(RENT, MULT, ACCESS, ADD), .fns=~log(.x))
View(chow)
chow<-chow %>% mutate(c_across(RENT, MULT, ACCESS, ADD), .funs=list(LN=log(~))
chow<-chow %>% mutate(c_across(RENT, MULT, ACCESS, ADD), .funs=list(LN=log(~)))
chow<-chow %>% mutate(c_across(RENT, MULT, ACCESS, ADD), .funs=list(LN=log))
chow<-chow %>% mutate(across(RENT, MULT, ACCESS, ADD), .funs=list(LN=log))
chow<-chow %>% mutate(across(.cols=RENT, MULT, ACCESS, ADD), .funs=list(LN=log))
chow<-chow %>% mutate(across(.cols=RENT, MULT, ACCESS, ADD),list(LN=log))
rlang::last_error()
chow<-chow %>% mutate(across(.cols=RENT, MULT, ACCESS, ADD),list(LN=log(~.)))
chow<-chow %>% mutate(across(.cols=RENT, MULT, ACCESS, ADD,list(LN=log)))
chow<-chow %>% mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log)))
View(chow)
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>% mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"))
View(chow)
View(chow)
View(chow)
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>% mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>% dummy_cols(YEAR)
?dummy_cols
??dummy_cols()
install.packages("fastDummies")
library(fastDummies)
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>% mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>% dummy_cols(YEAR)
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>% mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>% dummy_cols(select_columns=YEAR)
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>% mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>% mutate(D61=ifelse(YEAR=1961,1,0),
D62=ifelse(YEAR=1962,1,0),
D63=ifelse(YEAR=1963,1,0),
D64=ifelse(YEAR=1964,1,0),
D65=ifelse(YEAR=1965,1,0))
View(chow)
class(chow$YEAR)
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>%  mutate(across(where(is.character), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>% mutate(D61=ifelse(YEAR=1961,1,0),
D62=ifelse(YEAR=1962,1,0),
D63=ifelse(YEAR=1963,1,0),
D64=ifelse(YEAR=1964,1,0),
D65=ifelse(YEAR=1965,1,0))
chow<-chow %>%  mutate(across(where(is.character), as.numeric))
class(chow$YEAR)
chow<-chow %>%  mutate(across(where(is.integer), as.numeric))
class(chow$YEAR)
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>%  mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>% mutate(D61=ifelse(YEAR=1961,1,0),
D62=ifelse(YEAR=1962,1,0),
D63=ifelse(YEAR=1963,1,0),
D64=ifelse(YEAR=1964,1,0),
D65=ifelse(YEAR=1965,1,0))
View(chow)
View(chow)
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>% mutate(D61=ifelse(YEAR=61,1,0),
D62=ifelse(YEAR=62,1,0),
D63=ifelse(YEAR=63,1,0),
D64=ifelse(YEAR=64,1,0),
D65=ifelse(YEAR=65,1,0))
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>%   mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>% mutate(D61=ifelse(YEAR=61,1,0),
D62=ifelse(YEAR=62,1,0),
D63=ifelse(YEAR=63,1,0),
D64=ifelse(YEAR=64,1,0),
D65=ifelse(YEAR=65,1,0))
rlang::last_error()
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>%   mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM))
View(chow)
chow<-chow %>% mutate(D61=ifelse(YEAR=61,1,0),
D62=ifelse(YEAR=62,1,0),
D63=ifelse(YEAR=63,1,0),
D64=ifelse(YEAR=64,1,0),
D65=ifelse(YEAR=65,1,0))
View(chow)
class(chow)
chow<-chow %>% mutate(D61=ifelse(YEAR=61,1,0))
View(chow)
View(chow)
View(chow)
chow<-chow %>% mutate(X=ifelse(WORDS=4,1,0))
chow<-chow %>% mutate(X=ifelse(WORDS==4,1,0))
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>%   mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>%
mutate(D61=ifelse(YEAR==61,1,0),
D62=ifelse(YEAR==62,1,0),
D63=ifelse(YEAR==63,1,0),
D64=ifelse(YEAR==64,1,0),
D65=ifelse(YEAR==65,1,0))
View(chow)
cor_chow<-chow %>% select(c(year,LNRENT:LNMEM)) %>% select(-MEM)
cor_chow<-chow %>% select(c(YEAR,LNRENT:LNMEM)) %>% select(-MEM)
View(cor_chow)
cor_chow_59<-cor(cor_chow %>% filter(YEAR<1960) %>% select(-YEAR))
View(cor_chow_59)
cor_chow_65<-cor(cor_chow %>% filter(YEAR=>1960) %>% select(-YEAR))
cor_chow_65<-cor(cor_chow %>% filter(YEAR>=1960) %>% select(-YEAR))
View(cor_chow_59)
View(cor_chow_65)
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>%   mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>%
mutate(D61=ifelse(YEAR==61,1,0),
D62=ifelse(YEAR==62,1,0),
D63=ifelse(YEAR==63,1,0),
D64=ifelse(YEAR==64,1,0),
D65=ifelse(YEAR==65,1,0))
cor_chow<-chow %>% select(c(YEAR,LNRENT:LNMEM)) %>% select(-MEM)
cor_chow_59<-cor(cor_chow %>% filter(YEAR<60) %>% select(-YEAR))
cor_chow_65<-cor(cor_chow %>% filter(YEAR>=60) %>% select(-YEAR))
View(cor_chow_59)
View(cor_chow_65)
View(chow)
?lm
lm4_1<-lm(LNRENT~ LNMULT+LNMEM+LNACCESS+D61+D62+D63+D64,filter(chow, YEAR>=60))
lm4_1
View(chow)
View(lm4_1)
View(chow)
lm4_1<-lm(LNRENT~ LNMULT+LNMEM+LNACCESS+D61+D62+D63+D64+D65,filter(chow, YEAR>=60))
lm4_1
summ(lm4_1)
summary(lm4_1)
View(chow)
View(chow)
View(chow)
View(chow)
chow_60<-chow %>% filter(YEAR>=60)
chow_60
View(chow_60)
with(chow_60,table(year))
hist(chow_60$YEAR)
