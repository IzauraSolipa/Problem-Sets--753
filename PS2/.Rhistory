"TTO", "TUN", "TUR", "TKM", "USR", "UGA", "UKR", "ARE", "GBR", "TZA",
"USA", "URY", "UZB", "VUT", "VEN", "VNM", "YEM", "ZMB", "ZWE")
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "_bp_T.txt",
full.names = TRUE)
TD <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE)
TD <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE)
memory.size()
memory.limit()
memory.limit(size=56000)
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "_bp_T.txt",
full.names = TRUE)
TD <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE)
View(TD)
TD<-TD[-c(4915*1,4915*2,4915*3,4915*4,4915*5,4915*6,4915*7,4915*8,4915*9,4915*10,4915*11,4915*12,4915*13,
4915*14,4915*15,4915*16,4915*17,4915*18,4915*19,4915*20,4915*21,4915*22,4915*23,4915*24,4915*25,
4915*26),-4915]
rm(list=ls())
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
profits<-c(2,2,1,3,3,3,2,4)
VA<-data.frame(year, country, industry, wages, profits)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
FD<-data.frame(year,country,industry, A.household,B.household)
variables_industry<-T%>%group_by(year)%>%summarise_if(is.numeric,sum)
variables_industry<-variables_industry%>%pivot_longer(-year,"i", values_to="c")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
View(variables_industry)
Y<-VA %>% select(wages,profits)
Y<-rowSums(Y)
variables_industry<-variables_industry %>% mutate(wages, profits,Y,Y2=wages+profits)
View(variables_industry)
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
profits<-c(2,2,1,3,3,3,2,4)
VA<-data.frame(year, country, industry, wages, profits)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
FD<-data.frame(year,country,industry, A.household,B.household)
variables_industry<-T%>%group_by(year)%>%summarise_if(is.numeric,sum)
variables_industry<-variables_industry%>%pivot_longer(-year,"i", values_to="c")
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
variables_industry<-variables_industry %>% mutate(wages, profits,Y=wages+profits)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
variables_country<-variables_country %>% mutate(sigma=profits/wages, h=c/wages, gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_country)
variables_year<-variables_country %>% group_by(year) %>% summarise_if(is.numeric,sum)
names(variables_industry)
variables_year<-variables_year %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_country)
View(variables_year)
View(variables_country)
View(variables_industry)
View(`T`)
View(VA)
View(FD)
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
profits<-c(2,2,1,3,3,3,2,4)
VA<-data.frame(year, country, industry, wages, profits)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
FD<-data.frame(year,country,industry, A.household,B.household)
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
View(variables_industry)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(wages, profits,Y=wages+profits)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
View(variables_country)
variables_country<-variables_country %>% mutate(sigma=profits/wages, h=c/wages, gamma=Y/(c+wages),
r=profits/(c+wages))
View(VA)
View(variables_industry)
View(variables_country)
variables_year<-variables_country %>% group_by(year) %>% summarise_if(is.numeric,sum)
View(variables_year)
variables_year<-variables_year %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_year)
View(eci)
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
taxes<-runif(n = 8, min = 0, max = 6)
subsidies<-runif(n = 8, min = 0, max = 6)
profits<-c(2,2,1,3,3,3,2,4)
nmi<-runif(n = 8, min = 0, max = 6)
depreciation<-runif(n = 8, min = 0, max = 6)
VA<-data.frame(year, country, industry, wages, profits,taxes, subsidies, profits, nmi, depreciation)
View(VA)
rm(VA)
VA<-data.frame(year, country, industry, wages, profits,taxes, subsidies, nmi, depreciation)
View(VA)
rm(eci, psrtr, pstre)
rm(pstr)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
A.non-profit<-runif(n = 8, min = 0, max = 6)
B.non-profit<-runif(n = 8, min = 0, max = 6)
A.government<-runif(n = 8, min = 0, max = 6)
B.government<-runif(n = 8, min = 0, max = 6)
A.capitalformation<-runif(n = 8, min = 0, max = 6)
B.capitalformation<-runif(n = 8, min = 0, max = 6)
A.inventories<-runif(n = 8, min = 0, max = 6)
B.inventories<-runif(n = 8, min = 0, max = 6)
A.acquisitions<-runif(n = 8, min = 0, max = 6)
B.acquisitions<-runif(n = 8, min = 0, max = 6)
FD<-data.frame(year,country,industry, A.household,B.household, A.government, B.government,
A.capitalformation, B.capitalformation, A.inventories,B.inventories,A.acquisitions,
B.acquisitions)
View(FD)
View(VA)
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
View(variables_industry)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c-d")
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c-d")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c-d)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, "c-d")
View(variables_industry)
variables_industry<-variables_industry %>% mutate(wages, profits,Y=wages+profits.c="c-d"+depreciation)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits.c="c-d"+depreciation)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits.c=c-d+depreciation)
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to=constant)
View(variables_industry)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="constant")
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, constant)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits.c=constant+depreciation)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits, c=constant+depreciation)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
variables_country<-variables_country %>% mutate(sigma=profits/wages, h=c/wages, gamma=Y/(c+wages),
r=profits/(c+wages))
variables_year<-variables_country %>% group_by(year) %>% summarise_if(is.numeric,sum)
variables_year<-variables_year %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
View(VA)
View(variables_year)
View(variables_country)
install.packages("Rcmdr")
library(Rcmdr)
library(dplyr)
library(tidyr)
library(data.table)
library(readxl)
isntall.packages("readxl")
install.packages("readxl")
library(readxl)
library(readxl)
library(xlsx)
detach("package:readxl", unload = TRUE)
install.packages("xlsx")
library(xlsx)
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
library("rio")
library(matlib)
library(gdata)
library(plyr)
library(ggplot2)
library(car)
library(foreign)
library(rmarkdown)
options(scipen=10000)
options(digits=4)
rm(list=ls())
rm(list=ls())
setwd("C:/Users/User/Documents/GitHub/Problem-Sets--753/PS2")
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
library(dplyr)
library(data.table)
library(ggplot2)
library("rio")
library(matlib)
library(gdata)
library(tinytex)
library(scales)
library(ggplot2)
library(foreign)
library(rmarkdown)
library(fastDummies)
options(scipen=10000)
options(digits=4)
rm(list=ls())
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
chow<-chow %>%   mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>%
mutate(D61=ifelse(YEAR==61,1,0),
D62=ifelse(YEAR==62,1,0),
D63=ifelse(YEAR==63,1,0),
D64=ifelse(YEAR==64,1,0),
D65=ifelse(YEAR==65,1,0))
View(chow)
library(haven)
library(ggplot2)
library(plyr)
library(stargazer)
options(WIDTH=200)
rm(list = ls())
CHOWModel <- read_dta("http://courses.umass.edu/econ753/berndt/stata/chow.dta")
D <- with(CHOWModel, model.matrix(~ 0 + factor(year)))
colnames(D) <- gsub(pattern ="factor\\(year\\)" , replacement ="year", colnames(D))
CHOWModel <- cbind(CHOWModel,D)
######## Part 1 #######
###### Question 3 #####
## a. Correlation matrixes
CHOWModel <- transform(CHOWModel,LNRENT = log(rent), LNMULT=log(mult), LNADD=log(add), LNACCESS=log(access), LNMEM=log(words*binary*digits))
as.dist(cor(subset(CHOWModel,year<60,select =c(LNRENT,LNMULT,LNADD,LNACCESS,LNMEM))),upper =FALSE)
as.dist(cor(subset(CHOWModel,year>=60,select=c(LNRENT,LNMULT,LNADD,LNACCESS,LNMEM))),upper=FALSE)
## b. Regression OLS LNRENT=f(LNMULT, LNACCESS, LNMEM, allyearsdummies) from 1960 to 1965
x60 <- subset(CHOWModel,year>=60)
x60.lm <- lm(LNRENT ~ LNMULT + LNACCESS + LNMEM + year61 + year62 + year63 + year64 + year65, data =x60)
## e. Regression and Price Index
cat(index <- exp(c(0,coef(x60.lm)[5:9]))) ##constructing a hedonic price index exponentiating the coeficients of the year dummy variables##
x60.lm.wls <- lm(LNRENT ~ LNMULT + LNACCESS + LNMEM + year61 + year62 + year63 + year64 + year65, weights =volume, data =x60)
stargazer(x60.lm, x60.lm.wls, type = "text", style = "default", intercept.bottom = FALSE, column.labels = c("OLS", "WLS"))
View(D)
View(CHOWModel)
cat(index <- exp(c(0,coef(x60.lm)[5:9]))) ##constructing a hedonic price index exponentiating the coeficients of the year dummy variables##
library(dplyr)
library(data.table)
library(ggplot2)
library("rio")
library(matlib)
library(gdata)
library(tinytex)
library(scales)
library(ggplot2)
library(foreign)
library(rmarkdown)
library(fastDummies)
options(scipen=10000)
options(digits=4)
rm(list=ls())
################### PART 1 ###################################
##############################################################
#Set my working directory
#setwd("C:/Users/User/Documents/GitHub/Problem-Sets--753/PS2")
#Problem 3
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>%   mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>%
mutate(D61=ifelse(YEAR==61,1,0),
D62=ifelse(YEAR==62,1,0),
D63=ifelse(YEAR==63,1,0),
D64=ifelse(YEAR==64,1,0),
D65=ifelse(YEAR==65,1,0))
cor_chow<-chow %>% select(c(YEAR,LNRENT:LNMEM)) %>% select(-MEM)
cor_chow_59<-cor(cor_chow %>% filter(YEAR<60) %>% select(-YEAR))
cor_chow_65<-cor(cor_chow %>% filter(YEAR>=60) %>% select(-YEAR))
#(b)
lm4_1<-lm(LNRENT~ LNMULT+LNMEM+LNACCESS+D61+D62+D63+D64+D65,filter(chow, YEAR>=60))
summary(lm4_1)
coefficients<-data.frame(coef(lm4_1))%>% slice(-c(1:4))
coefficients<-coefficients %>% rename("Coefficient"="coef.lm4_1.") %>%
mutate("Price Index"=exp(Coefficient))
rm(list=ls())
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
#(a) Construct appropiate variables and get correlation matrices
chow<-chow %>%   mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>%
mutate(D61=ifelse(YEAR==61,1,0),
D62=ifelse(YEAR==62,1,0),
D63=ifelse(YEAR==63,1,0),
D64=ifelse(YEAR==64,1,0),
D65=ifelse(YEAR==65,1,0))
cor_chow<-chow %>% select(c(YEAR,LNRENT:LNMEM)) %>% select(-MEM)
rm(list=ls())
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
View(chow)
chow<-chow %>%   mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>%
mutate(D61=ifelse(YEAR==61,1,0),
D62=ifelse(YEAR==62,1,0),
D63=ifelse(YEAR==63,1,0),
D64=ifelse(YEAR==64,1,0),
D65=ifelse(YEAR==65,1,0))
View(chow)
chow<-chow %>%   mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>%
mutate(D61=ifelse(YEAR==61,1,0),
D62=ifelse(YEAR==62,1,0),
D63=ifelse(YEAR==63,1,0),
D64=ifelse(YEAR==64,1,0),
D65=ifelse(YEAR==65,1,0))
library(dplyr)
library(data.table)
library(ggplot2)
library("rio")
library(matlib)
library(gdata)
library(tinytex)
library(scales)
library(ggplot2)
library(foreign)
library(rmarkdown)
library(fastDummies)
options(scipen=10000)
options(digits=4)
rm(list=ls())
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
chow<-chow %>%   mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>%
mutate(D61=ifelse(YEAR==61,1,0),
D62=ifelse(YEAR==62,1,0),
D63=ifelse(YEAR==63,1,0),
D64=ifelse(YEAR==64,1,0),
D65=ifelse(YEAR==65,1,0))
View(chow)
libraty(tidyr)
library(tidyr)
rm(list=ls())
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
chow<-chow %>%   mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>%
mutate(D61=ifelse(YEAR==61,1,0),
D62=ifelse(YEAR==62,1,0),
D63=ifelse(YEAR==63,1,0),
D64=ifelse(YEAR==64,1,0),
D65=ifelse(YEAR==65,1,0))
View(chow)
chow<-chow %>%
mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>%
mutate(D61=ifelse(YEAR==61,1,0),
D62=ifelse(YEAR==62,1,0),
D63=ifelse(YEAR==63,1,0),
D64=ifelse(YEAR==64,1,0),
D65=ifelse(YEAR==65,1,0))
chow %>%
mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS)
library(plyr)
rm(list=ls())
chow <- fread('https://courses.umass.edu/econ753/berndt/chap4.dat/chow')
chow<-chow %>%
mutate(across(where(is.integer), as.numeric))%>%
mutate(across(c(RENT, MULT, ACCESS, ADD),list(LN=log),.names="{fn}{col}"),
MEM=WORDS*BINARY*DIGITS) %>%
mutate(LNMEM=log(MEM)) %>%
mutate(D61=ifelse(YEAR==61,1,0),
D62=ifelse(YEAR==62,1,0),
D63=ifelse(YEAR==63,1,0),
D64=ifelse(YEAR==64,1,0),
D65=ifelse(YEAR==65,1,0))
cor_chow<-chow %>% select(c(YEAR,LNRENT:LNMEM)) %>% select(-MEM)
cor_chow_59<-cor(cor_chow %>% filter(YEAR<60) %>% select(-YEAR))
cor_chow_65<-cor(cor_chow %>% filter(YEAR>=60) %>% select(-YEAR))
lm4_1<-lm(LNRENT~ LNMULT+LNMEM+LNACCESS+D61+D62+D63+D64+D65,filter(chow, YEAR>=60))
summary(lm4_1)
coefficients<-data.frame(coef(lm4_1))%>% slice(-c(1:4))
coefficients<-coefficients %>% rename("Coefficient"="coef.lm4_1.") %>%
mutate("Price Index"=exp(Coefficient))
coeff2<-chow %>%filter(YEAR> 60) %>%  group_by(YEAR) %>% summarise(mLNMULT=mean(LNMULT),mLNMEM=mean(LNMEM),mLNACCESS=mean(LNACCESS)) %>% ungroup()
coefficients<-data.frame(coefficients,coeff2)
coefficients<-coefficients %>% mutate(PI= exp(Coefficient*w1))
## Libraries
library(tidyverse)
library(XLConnect)
## Clear workplace
rm(list = ls())
dev.off()
## Read CPI-U data from spreadsheet
cpiU <- readWorksheetFromFile("CPI_U.xls",
sheet="Monthly",
startRow=1,
startCol=1)
cpiU <- cbind(cpiU, "CPI-U")
## Libraries
library(tidyverse)
library(XLConnect)
install.packages("XLConnect")
library(XLConnect)
## Clear workplace
rm(list = ls())
dev.off()
## Read CPI-U data from spreadsheet
cpiU <- readWorksheetFromFile("CPI_U.xls",
sheet="Monthly",
startRow=1,
startCol=1)
cpiU <- cbind(cpiU, "CPI-U")
colnames(cpiU) <- c("date", "cpi", "type")
library(XLConnect)
## Read CPI-U data from spreadsheet
cpiU <- readWorksheetFromFile("CPI_U.xls",
sheet="Monthly",
startRow=1,
startCol=1)
library(XLConnect)
library(xlsx)
